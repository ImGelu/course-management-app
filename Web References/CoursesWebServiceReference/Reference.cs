//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Proiect.CoursesWebServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CoursesWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CoursesWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoursesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCourseByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecializationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecializationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSpecializationByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSpecializationOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditSpecializationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSpecializationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacultiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacultyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFacultyByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFacultyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditFacultyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFacultyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CoursesWebService() {
            this.Url = global::Proiect.Properties.Settings.Default.Proiect_CoursesWebServiceReference_CoursesWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetRolesCompletedEventHandler GetRolesCompleted;
        
        /// <remarks/>
        public event GetRoleCompletedEventHandler GetRoleCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetUsersByNameCompletedEventHandler GetUsersByNameCompleted;
        
        /// <remarks/>
        public event GetUserByEmailCompletedEventHandler GetUserByEmailCompleted;
        
        /// <remarks/>
        public event CheckLoginCompletedEventHandler CheckLoginCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event EditUserCompletedEventHandler EditUserCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event GetCoursesCompletedEventHandler GetCoursesCompleted;
        
        /// <remarks/>
        public event GetCourseCompletedEventHandler GetCourseCompleted;
        
        /// <remarks/>
        public event GetCourseByNameCompletedEventHandler GetCourseByNameCompleted;
        
        /// <remarks/>
        public event AddCourseCompletedEventHandler AddCourseCompleted;
        
        /// <remarks/>
        public event EditCourseCompletedEventHandler EditCourseCompleted;
        
        /// <remarks/>
        public event DeleteCourseCompletedEventHandler DeleteCourseCompleted;
        
        /// <remarks/>
        public event GetSpecializationsCompletedEventHandler GetSpecializationsCompleted;
        
        /// <remarks/>
        public event GetSpecializationCompletedEventHandler GetSpecializationCompleted;
        
        /// <remarks/>
        public event GetSpecializationByNameCompletedEventHandler GetSpecializationByNameCompleted;
        
        /// <remarks/>
        public event AddSpecializationCompletedEventHandler AddSpecializationCompleted;
        
        /// <remarks/>
        public event EditSpecializationCompletedEventHandler EditSpecializationCompleted;
        
        /// <remarks/>
        public event DeleteSpecializationCompletedEventHandler DeleteSpecializationCompleted;
        
        /// <remarks/>
        public event GetDomainsCompletedEventHandler GetDomainsCompleted;
        
        /// <remarks/>
        public event GetDomainCompletedEventHandler GetDomainCompleted;
        
        /// <remarks/>
        public event GetDomainByNameCompletedEventHandler GetDomainByNameCompleted;
        
        /// <remarks/>
        public event AddDomainCompletedEventHandler AddDomainCompleted;
        
        /// <remarks/>
        public event EditDomainCompletedEventHandler EditDomainCompleted;
        
        /// <remarks/>
        public event DeleteDomainCompletedEventHandler DeleteDomainCompleted;
        
        /// <remarks/>
        public event GetFacultiesCompletedEventHandler GetFacultiesCompleted;
        
        /// <remarks/>
        public event GetFacultyCompletedEventHandler GetFacultyCompleted;
        
        /// <remarks/>
        public event GetFacultyByNameCompletedEventHandler GetFacultyByNameCompleted;
        
        /// <remarks/>
        public event AddFacultyCompletedEventHandler AddFacultyCompleted;
        
        /// <remarks/>
        public event EditFacultyCompletedEventHandler EditFacultyCompleted;
        
        /// <remarks/>
        public event DeleteFacultyCompletedEventHandler DeleteFacultyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetRoles() {
            object[] results = this.Invoke("GetRoles", new object[0]);
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesAsync() {
            this.GetRolesAsync(null);
        }
        
        /// <remarks/>
        public void GetRolesAsync(object userState) {
            if ((this.GetRolesOperationCompleted == null)) {
                this.GetRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesOperationCompleted);
            }
            this.InvokeAsync("GetRoles", new object[0], this.GetRolesOperationCompleted, userState);
        }
        
        private void OnGetRolesOperationCompleted(object arg) {
            if ((this.GetRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role GetRole(int id) {
            object[] results = this.Invoke("GetRole", new object[] {
                        id});
            return ((Role)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoleAsync(int id) {
            this.GetRoleAsync(id, null);
        }
        
        /// <remarks/>
        public void GetRoleAsync(int id, object userState) {
            if ((this.GetRoleOperationCompleted == null)) {
                this.GetRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoleOperationCompleted);
            }
            this.InvokeAsync("GetRole", new object[] {
                        id}, this.GetRoleOperationCompleted, userState);
        }
        
        private void OnGetRoleOperationCompleted(object arg) {
            if ((this.GetRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoleCompleted(this, new GetRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] GetUsers() {
            object[] results = this.Invoke("GetUsers", new object[0]);
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[0], this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUser(int id) {
            object[] results = this.Invoke("GetUser", new object[] {
                        id});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(int id) {
            this.GetUserAsync(id, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(int id, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        id}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] GetUsersByName(string name) {
            object[] results = this.Invoke("GetUsersByName", new object[] {
                        name});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersByNameAsync(string name) {
            this.GetUsersByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetUsersByNameAsync(string name, object userState) {
            if ((this.GetUsersByNameOperationCompleted == null)) {
                this.GetUsersByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersByNameOperationCompleted);
            }
            this.InvokeAsync("GetUsersByName", new object[] {
                        name}, this.GetUsersByNameOperationCompleted, userState);
        }
        
        private void OnGetUsersByNameOperationCompleted(object arg) {
            if ((this.GetUsersByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersByNameCompleted(this, new GetUsersByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User GetUserByEmail(string email) {
            object[] results = this.Invoke("GetUserByEmail", new object[] {
                        email});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByEmailAsync(string email) {
            this.GetUserByEmailAsync(email, null);
        }
        
        /// <remarks/>
        public void GetUserByEmailAsync(string email, object userState) {
            if ((this.GetUserByEmailOperationCompleted == null)) {
                this.GetUserByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByEmailOperationCompleted);
            }
            this.InvokeAsync("GetUserByEmail", new object[] {
                        email}, this.GetUserByEmailOperationCompleted, userState);
        }
        
        private void OnGetUserByEmailOperationCompleted(object arg) {
            if ((this.GetUserByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByEmailCompleted(this, new GetUserByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User CheckLogin(string email, string password) {
            object[] results = this.Invoke("CheckLogin", new object[] {
                        email,
                        password});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string email, string password) {
            this.CheckLoginAsync(email, password, null);
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string email, string password, object userState) {
            if ((this.CheckLoginOperationCompleted == null)) {
                this.CheckLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginOperationCompleted);
            }
            this.InvokeAsync("CheckLogin", new object[] {
                        email,
                        password}, this.CheckLoginOperationCompleted, userState);
        }
        
        private void OnCheckLoginOperationCompleted(object arg) {
            if ((this.CheckLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginCompleted(this, new CheckLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUser(User user) {
            this.Invoke("AddUser", new object[] {
                        user});
        }
        
        /// <remarks/>
        public void AddUserAsync(User user) {
            this.AddUserAsync(user, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(User user, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        user}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditUser(User user) {
            this.Invoke("EditUser", new object[] {
                        user});
        }
        
        /// <remarks/>
        public void EditUserAsync(User user) {
            this.EditUserAsync(user, null);
        }
        
        /// <remarks/>
        public void EditUserAsync(User user, object userState) {
            if ((this.EditUserOperationCompleted == null)) {
                this.EditUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditUserOperationCompleted);
            }
            this.InvokeAsync("EditUser", new object[] {
                        user}, this.EditUserOperationCompleted, userState);
        }
        
        private void OnEditUserOperationCompleted(object arg) {
            if ((this.EditUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteUser(int id) {
            this.Invoke("DeleteUser", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int id) {
            this.DeleteUserAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int id, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        id}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCourses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Course[] GetCourses() {
            object[] results = this.Invoke("GetCourses", new object[0]);
            return ((Course[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCoursesAsync() {
            this.GetCoursesAsync(null);
        }
        
        /// <remarks/>
        public void GetCoursesAsync(object userState) {
            if ((this.GetCoursesOperationCompleted == null)) {
                this.GetCoursesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoursesOperationCompleted);
            }
            this.InvokeAsync("GetCourses", new object[0], this.GetCoursesOperationCompleted, userState);
        }
        
        private void OnGetCoursesOperationCompleted(object arg) {
            if ((this.GetCoursesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoursesCompleted(this, new GetCoursesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Course GetCourse(int id) {
            object[] results = this.Invoke("GetCourse", new object[] {
                        id});
            return ((Course)(results[0]));
        }
        
        /// <remarks/>
        public void GetCourseAsync(int id) {
            this.GetCourseAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCourseAsync(int id, object userState) {
            if ((this.GetCourseOperationCompleted == null)) {
                this.GetCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourseOperationCompleted);
            }
            this.InvokeAsync("GetCourse", new object[] {
                        id}, this.GetCourseOperationCompleted, userState);
        }
        
        private void OnGetCourseOperationCompleted(object arg) {
            if ((this.GetCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourseCompleted(this, new GetCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCourseByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Course[] GetCourseByName(string name) {
            object[] results = this.Invoke("GetCourseByName", new object[] {
                        name});
            return ((Course[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCourseByNameAsync(string name) {
            this.GetCourseByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetCourseByNameAsync(string name, object userState) {
            if ((this.GetCourseByNameOperationCompleted == null)) {
                this.GetCourseByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCourseByNameOperationCompleted);
            }
            this.InvokeAsync("GetCourseByName", new object[] {
                        name}, this.GetCourseByNameOperationCompleted, userState);
        }
        
        private void OnGetCourseByNameOperationCompleted(object arg) {
            if ((this.GetCourseByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCourseByNameCompleted(this, new GetCourseByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCourse(Course course) {
            this.Invoke("AddCourse", new object[] {
                        course});
        }
        
        /// <remarks/>
        public void AddCourseAsync(Course course) {
            this.AddCourseAsync(course, null);
        }
        
        /// <remarks/>
        public void AddCourseAsync(Course course, object userState) {
            if ((this.AddCourseOperationCompleted == null)) {
                this.AddCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCourseOperationCompleted);
            }
            this.InvokeAsync("AddCourse", new object[] {
                        course}, this.AddCourseOperationCompleted, userState);
        }
        
        private void OnAddCourseOperationCompleted(object arg) {
            if ((this.AddCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCourseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditCourse(Course course) {
            this.Invoke("EditCourse", new object[] {
                        course});
        }
        
        /// <remarks/>
        public void EditCourseAsync(Course course) {
            this.EditCourseAsync(course, null);
        }
        
        /// <remarks/>
        public void EditCourseAsync(Course course, object userState) {
            if ((this.EditCourseOperationCompleted == null)) {
                this.EditCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditCourseOperationCompleted);
            }
            this.InvokeAsync("EditCourse", new object[] {
                        course}, this.EditCourseOperationCompleted, userState);
        }
        
        private void OnEditCourseOperationCompleted(object arg) {
            if ((this.EditCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditCourseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteCourse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCourse(int id) {
            this.Invoke("DeleteCourse", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteCourseAsync(int id) {
            this.DeleteCourseAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteCourseAsync(int id, object userState) {
            if ((this.DeleteCourseOperationCompleted == null)) {
                this.DeleteCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCourseOperationCompleted);
            }
            this.InvokeAsync("DeleteCourse", new object[] {
                        id}, this.DeleteCourseOperationCompleted, userState);
        }
        
        private void OnDeleteCourseOperationCompleted(object arg) {
            if ((this.DeleteCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCourseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecializations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Specialization[] GetSpecializations() {
            object[] results = this.Invoke("GetSpecializations", new object[0]);
            return ((Specialization[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecializationsAsync() {
            this.GetSpecializationsAsync(null);
        }
        
        /// <remarks/>
        public void GetSpecializationsAsync(object userState) {
            if ((this.GetSpecializationsOperationCompleted == null)) {
                this.GetSpecializationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecializationsOperationCompleted);
            }
            this.InvokeAsync("GetSpecializations", new object[0], this.GetSpecializationsOperationCompleted, userState);
        }
        
        private void OnGetSpecializationsOperationCompleted(object arg) {
            if ((this.GetSpecializationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecializationsCompleted(this, new GetSpecializationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecialization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Specialization GetSpecialization(int id) {
            object[] results = this.Invoke("GetSpecialization", new object[] {
                        id});
            return ((Specialization)(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecializationAsync(int id) {
            this.GetSpecializationAsync(id, null);
        }
        
        /// <remarks/>
        public void GetSpecializationAsync(int id, object userState) {
            if ((this.GetSpecializationOperationCompleted == null)) {
                this.GetSpecializationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecializationOperationCompleted);
            }
            this.InvokeAsync("GetSpecialization", new object[] {
                        id}, this.GetSpecializationOperationCompleted, userState);
        }
        
        private void OnGetSpecializationOperationCompleted(object arg) {
            if ((this.GetSpecializationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecializationCompleted(this, new GetSpecializationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSpecializationByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Specialization[] GetSpecializationByName(string name) {
            object[] results = this.Invoke("GetSpecializationByName", new object[] {
                        name});
            return ((Specialization[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSpecializationByNameAsync(string name) {
            this.GetSpecializationByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetSpecializationByNameAsync(string name, object userState) {
            if ((this.GetSpecializationByNameOperationCompleted == null)) {
                this.GetSpecializationByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSpecializationByNameOperationCompleted);
            }
            this.InvokeAsync("GetSpecializationByName", new object[] {
                        name}, this.GetSpecializationByNameOperationCompleted, userState);
        }
        
        private void OnGetSpecializationByNameOperationCompleted(object arg) {
            if ((this.GetSpecializationByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSpecializationByNameCompleted(this, new GetSpecializationByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddSpecialization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddSpecialization(Specialization specialization) {
            this.Invoke("AddSpecialization", new object[] {
                        specialization});
        }
        
        /// <remarks/>
        public void AddSpecializationAsync(Specialization specialization) {
            this.AddSpecializationAsync(specialization, null);
        }
        
        /// <remarks/>
        public void AddSpecializationAsync(Specialization specialization, object userState) {
            if ((this.AddSpecializationOperationCompleted == null)) {
                this.AddSpecializationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSpecializationOperationCompleted);
            }
            this.InvokeAsync("AddSpecialization", new object[] {
                        specialization}, this.AddSpecializationOperationCompleted, userState);
        }
        
        private void OnAddSpecializationOperationCompleted(object arg) {
            if ((this.AddSpecializationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSpecializationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditSpecialization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditSpecialization(Specialization specialization) {
            this.Invoke("EditSpecialization", new object[] {
                        specialization});
        }
        
        /// <remarks/>
        public void EditSpecializationAsync(Specialization specialization) {
            this.EditSpecializationAsync(specialization, null);
        }
        
        /// <remarks/>
        public void EditSpecializationAsync(Specialization specialization, object userState) {
            if ((this.EditSpecializationOperationCompleted == null)) {
                this.EditSpecializationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditSpecializationOperationCompleted);
            }
            this.InvokeAsync("EditSpecialization", new object[] {
                        specialization}, this.EditSpecializationOperationCompleted, userState);
        }
        
        private void OnEditSpecializationOperationCompleted(object arg) {
            if ((this.EditSpecializationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditSpecializationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSpecialization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSpecialization(int id) {
            this.Invoke("DeleteSpecialization", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteSpecializationAsync(int id) {
            this.DeleteSpecializationAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteSpecializationAsync(int id, object userState) {
            if ((this.DeleteSpecializationOperationCompleted == null)) {
                this.DeleteSpecializationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSpecializationOperationCompleted);
            }
            this.InvokeAsync("DeleteSpecialization", new object[] {
                        id}, this.DeleteSpecializationOperationCompleted, userState);
        }
        
        private void OnDeleteSpecializationOperationCompleted(object arg) {
            if ((this.DeleteSpecializationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSpecializationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDomains", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Domain[] GetDomains() {
            object[] results = this.Invoke("GetDomains", new object[0]);
            return ((Domain[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainsAsync() {
            this.GetDomainsAsync(null);
        }
        
        /// <remarks/>
        public void GetDomainsAsync(object userState) {
            if ((this.GetDomainsOperationCompleted == null)) {
                this.GetDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainsOperationCompleted);
            }
            this.InvokeAsync("GetDomains", new object[0], this.GetDomainsOperationCompleted, userState);
        }
        
        private void OnGetDomainsOperationCompleted(object arg) {
            if ((this.GetDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainsCompleted(this, new GetDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Domain GetDomain(int id) {
            object[] results = this.Invoke("GetDomain", new object[] {
                        id});
            return ((Domain)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainAsync(int id) {
            this.GetDomainAsync(id, null);
        }
        
        /// <remarks/>
        public void GetDomainAsync(int id, object userState) {
            if ((this.GetDomainOperationCompleted == null)) {
                this.GetDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainOperationCompleted);
            }
            this.InvokeAsync("GetDomain", new object[] {
                        id}, this.GetDomainOperationCompleted, userState);
        }
        
        private void OnGetDomainOperationCompleted(object arg) {
            if ((this.GetDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainCompleted(this, new GetDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDomainByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Domain[] GetDomainByName(string name) {
            object[] results = this.Invoke("GetDomainByName", new object[] {
                        name});
            return ((Domain[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainByNameAsync(string name) {
            this.GetDomainByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetDomainByNameAsync(string name, object userState) {
            if ((this.GetDomainByNameOperationCompleted == null)) {
                this.GetDomainByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainByNameOperationCompleted);
            }
            this.InvokeAsync("GetDomainByName", new object[] {
                        name}, this.GetDomainByNameOperationCompleted, userState);
        }
        
        private void OnGetDomainByNameOperationCompleted(object arg) {
            if ((this.GetDomainByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainByNameCompleted(this, new GetDomainByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddDomain(Domain domain) {
            this.Invoke("AddDomain", new object[] {
                        domain});
        }
        
        /// <remarks/>
        public void AddDomainAsync(Domain domain) {
            this.AddDomainAsync(domain, null);
        }
        
        /// <remarks/>
        public void AddDomainAsync(Domain domain, object userState) {
            if ((this.AddDomainOperationCompleted == null)) {
                this.AddDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDomainOperationCompleted);
            }
            this.InvokeAsync("AddDomain", new object[] {
                        domain}, this.AddDomainOperationCompleted, userState);
        }
        
        private void OnAddDomainOperationCompleted(object arg) {
            if ((this.AddDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditDomain(Domain domain) {
            this.Invoke("EditDomain", new object[] {
                        domain});
        }
        
        /// <remarks/>
        public void EditDomainAsync(Domain domain) {
            this.EditDomainAsync(domain, null);
        }
        
        /// <remarks/>
        public void EditDomainAsync(Domain domain, object userState) {
            if ((this.EditDomainOperationCompleted == null)) {
                this.EditDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDomainOperationCompleted);
            }
            this.InvokeAsync("EditDomain", new object[] {
                        domain}, this.EditDomainOperationCompleted, userState);
        }
        
        private void OnEditDomainOperationCompleted(object arg) {
            if ((this.EditDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDomain(int id) {
            this.Invoke("DeleteDomain", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteDomainAsync(int id) {
            this.DeleteDomainAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteDomainAsync(int id, object userState) {
            if ((this.DeleteDomainOperationCompleted == null)) {
                this.DeleteDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDomainOperationCompleted);
            }
            this.InvokeAsync("DeleteDomain", new object[] {
                        id}, this.DeleteDomainOperationCompleted, userState);
        }
        
        private void OnDeleteDomainOperationCompleted(object arg) {
            if ((this.DeleteDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFaculties", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Faculty[] GetFaculties() {
            object[] results = this.Invoke("GetFaculties", new object[0]);
            return ((Faculty[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFacultiesAsync() {
            this.GetFacultiesAsync(null);
        }
        
        /// <remarks/>
        public void GetFacultiesAsync(object userState) {
            if ((this.GetFacultiesOperationCompleted == null)) {
                this.GetFacultiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacultiesOperationCompleted);
            }
            this.InvokeAsync("GetFaculties", new object[0], this.GetFacultiesOperationCompleted, userState);
        }
        
        private void OnGetFacultiesOperationCompleted(object arg) {
            if ((this.GetFacultiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacultiesCompleted(this, new GetFacultiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFaculty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Faculty GetFaculty(int id) {
            object[] results = this.Invoke("GetFaculty", new object[] {
                        id});
            return ((Faculty)(results[0]));
        }
        
        /// <remarks/>
        public void GetFacultyAsync(int id) {
            this.GetFacultyAsync(id, null);
        }
        
        /// <remarks/>
        public void GetFacultyAsync(int id, object userState) {
            if ((this.GetFacultyOperationCompleted == null)) {
                this.GetFacultyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacultyOperationCompleted);
            }
            this.InvokeAsync("GetFaculty", new object[] {
                        id}, this.GetFacultyOperationCompleted, userState);
        }
        
        private void OnGetFacultyOperationCompleted(object arg) {
            if ((this.GetFacultyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacultyCompleted(this, new GetFacultyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFacultyByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Faculty[] GetFacultyByName(string name) {
            object[] results = this.Invoke("GetFacultyByName", new object[] {
                        name});
            return ((Faculty[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFacultyByNameAsync(string name) {
            this.GetFacultyByNameAsync(name, null);
        }
        
        /// <remarks/>
        public void GetFacultyByNameAsync(string name, object userState) {
            if ((this.GetFacultyByNameOperationCompleted == null)) {
                this.GetFacultyByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFacultyByNameOperationCompleted);
            }
            this.InvokeAsync("GetFacultyByName", new object[] {
                        name}, this.GetFacultyByNameOperationCompleted, userState);
        }
        
        private void OnGetFacultyByNameOperationCompleted(object arg) {
            if ((this.GetFacultyByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFacultyByNameCompleted(this, new GetFacultyByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFaculty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddFaculty(Faculty faculty) {
            this.Invoke("AddFaculty", new object[] {
                        faculty});
        }
        
        /// <remarks/>
        public void AddFacultyAsync(Faculty faculty) {
            this.AddFacultyAsync(faculty, null);
        }
        
        /// <remarks/>
        public void AddFacultyAsync(Faculty faculty, object userState) {
            if ((this.AddFacultyOperationCompleted == null)) {
                this.AddFacultyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFacultyOperationCompleted);
            }
            this.InvokeAsync("AddFaculty", new object[] {
                        faculty}, this.AddFacultyOperationCompleted, userState);
        }
        
        private void OnAddFacultyOperationCompleted(object arg) {
            if ((this.AddFacultyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFacultyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditFaculty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditFaculty(Faculty faculty) {
            this.Invoke("EditFaculty", new object[] {
                        faculty});
        }
        
        /// <remarks/>
        public void EditFacultyAsync(Faculty faculty) {
            this.EditFacultyAsync(faculty, null);
        }
        
        /// <remarks/>
        public void EditFacultyAsync(Faculty faculty, object userState) {
            if ((this.EditFacultyOperationCompleted == null)) {
                this.EditFacultyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditFacultyOperationCompleted);
            }
            this.InvokeAsync("EditFaculty", new object[] {
                        faculty}, this.EditFacultyOperationCompleted, userState);
        }
        
        private void OnEditFacultyOperationCompleted(object arg) {
            if ((this.EditFacultyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditFacultyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFaculty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFaculty(int id) {
            this.Invoke("DeleteFaculty", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void DeleteFacultyAsync(int id) {
            this.DeleteFacultyAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteFacultyAsync(int id, object userState) {
            if ((this.DeleteFacultyOperationCompleted == null)) {
                this.DeleteFacultyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFacultyOperationCompleted);
            }
            this.InvokeAsync("DeleteFaculty", new object[] {
                        id}, this.DeleteFacultyOperationCompleted, userState);
        }
        
        private void OnDeleteFacultyOperationCompleted(object arg) {
            if ((this.DeleteFacultyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFacultyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Role {
        
        private int idField;
        
        private string nameField;
        
        private User[] usersField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public User[] Users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        private int idField;
        
        private string nameField;
        
        private string emailField;
        
        private string passwordField;
        
        private Users2Courses[] users2CoursesField;
        
        private Role[] rolesField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public Users2Courses[] Users2Courses {
            get {
                return this.users2CoursesField;
            }
            set {
                this.users2CoursesField = value;
            }
        }
        
        /// <remarks/>
        public Role[] Roles {
            get {
                return this.rolesField;
            }
            set {
                this.rolesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Users2Courses {
        
        private int id_userField;
        
        private int id_courseField;
        
        private byte statusField;
        
        private Course courseField;
        
        private User userField;
        
        /// <remarks/>
        public int id_user {
            get {
                return this.id_userField;
            }
            set {
                this.id_userField = value;
            }
        }
        
        /// <remarks/>
        public int id_course {
            get {
                return this.id_courseField;
            }
            set {
                this.id_courseField = value;
            }
        }
        
        /// <remarks/>
        public byte status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public Course Course {
            get {
                return this.courseField;
            }
            set {
                this.courseField = value;
            }
        }
        
        /// <remarks/>
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Course {
        
        private int idField;
        
        private int specialization_idField;
        
        private string nameField;
        
        private int study_yearField;
        
        private byte semesterField;
        
        private byte study_levelField;
        
        private byte creditsField;
        
        private int course_hoursField;
        
        private int laboratory_hoursField;
        
        private int seminary_hoursField;
        
        private int project_hoursField;
        
        private string contentField;
        
        private string laboratory_tutorsField;
        
        private string seminary_tutorsField;
        
        private string project_tutorsField;
        
        private Specialization specializationField;
        
        private Users2Courses[] users2CoursesField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int specialization_id {
            get {
                return this.specialization_idField;
            }
            set {
                this.specialization_idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int study_year {
            get {
                return this.study_yearField;
            }
            set {
                this.study_yearField = value;
            }
        }
        
        /// <remarks/>
        public byte semester {
            get {
                return this.semesterField;
            }
            set {
                this.semesterField = value;
            }
        }
        
        /// <remarks/>
        public byte study_level {
            get {
                return this.study_levelField;
            }
            set {
                this.study_levelField = value;
            }
        }
        
        /// <remarks/>
        public byte credits {
            get {
                return this.creditsField;
            }
            set {
                this.creditsField = value;
            }
        }
        
        /// <remarks/>
        public int course_hours {
            get {
                return this.course_hoursField;
            }
            set {
                this.course_hoursField = value;
            }
        }
        
        /// <remarks/>
        public int laboratory_hours {
            get {
                return this.laboratory_hoursField;
            }
            set {
                this.laboratory_hoursField = value;
            }
        }
        
        /// <remarks/>
        public int seminary_hours {
            get {
                return this.seminary_hoursField;
            }
            set {
                this.seminary_hoursField = value;
            }
        }
        
        /// <remarks/>
        public int project_hours {
            get {
                return this.project_hoursField;
            }
            set {
                this.project_hoursField = value;
            }
        }
        
        /// <remarks/>
        public string content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public string laboratory_tutors {
            get {
                return this.laboratory_tutorsField;
            }
            set {
                this.laboratory_tutorsField = value;
            }
        }
        
        /// <remarks/>
        public string seminary_tutors {
            get {
                return this.seminary_tutorsField;
            }
            set {
                this.seminary_tutorsField = value;
            }
        }
        
        /// <remarks/>
        public string project_tutors {
            get {
                return this.project_tutorsField;
            }
            set {
                this.project_tutorsField = value;
            }
        }
        
        /// <remarks/>
        public Specialization Specialization {
            get {
                return this.specializationField;
            }
            set {
                this.specializationField = value;
            }
        }
        
        /// <remarks/>
        public Users2Courses[] Users2Courses {
            get {
                return this.users2CoursesField;
            }
            set {
                this.users2CoursesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Specialization {
        
        private int idField;
        
        private string nameField;
        
        private int domain_idField;
        
        private Course[] coursesField;
        
        private Domain domainField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int domain_id {
            get {
                return this.domain_idField;
            }
            set {
                this.domain_idField = value;
            }
        }
        
        /// <remarks/>
        public Course[] Courses {
            get {
                return this.coursesField;
            }
            set {
                this.coursesField = value;
            }
        }
        
        /// <remarks/>
        public Domain Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Domain {
        
        private int idField;
        
        private string nameField;
        
        private int faculty_idField;
        
        private Faculty facultyField;
        
        private Specialization[] specializationsField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int faculty_id {
            get {
                return this.faculty_idField;
            }
            set {
                this.faculty_idField = value;
            }
        }
        
        /// <remarks/>
        public Faculty Faculty {
            get {
                return this.facultyField;
            }
            set {
                this.facultyField = value;
            }
        }
        
        /// <remarks/>
        public Specialization[] Specializations {
            get {
                return this.specializationsField;
            }
            set {
                this.specializationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Faculty {
        
        private int idField;
        
        private string nameField;
        
        private string websiteField;
        
        private string logoField;
        
        private Domain[] domainsField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public string logo {
            get {
                return this.logoField;
            }
            set {
                this.logoField = value;
            }
        }
        
        /// <remarks/>
        public Domain[] Domains {
            get {
                return this.domainsField;
            }
            set {
                this.domainsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRolesCompletedEventHandler(object sender, GetRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRoleCompletedEventHandler(object sender, GetRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUsersByNameCompletedEventHandler(object sender, GetUsersByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserByEmailCompletedEventHandler(object sender, GetUserByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckLoginCompletedEventHandler(object sender, CheckLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCoursesCompletedEventHandler(object sender, GetCoursesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoursesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoursesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Course[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Course[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCourseCompletedEventHandler(object sender, GetCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Course Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Course)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCourseByNameCompletedEventHandler(object sender, GetCourseByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCourseByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCourseByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Course[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Course[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddCourseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditCourseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteCourseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSpecializationsCompletedEventHandler(object sender, GetSpecializationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecializationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecializationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Specialization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Specialization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSpecializationCompletedEventHandler(object sender, GetSpecializationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecializationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecializationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Specialization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Specialization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSpecializationByNameCompletedEventHandler(object sender, GetSpecializationByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSpecializationByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSpecializationByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Specialization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Specialization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddSpecializationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditSpecializationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteSpecializationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDomainsCompletedEventHandler(object sender, GetDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Domain[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Domain[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDomainCompletedEventHandler(object sender, GetDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Domain Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Domain)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDomainByNameCompletedEventHandler(object sender, GetDomainByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Domain[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Domain[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFacultiesCompletedEventHandler(object sender, GetFacultiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacultiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacultiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Faculty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Faculty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFacultyCompletedEventHandler(object sender, GetFacultyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacultyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacultyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Faculty Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Faculty)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetFacultyByNameCompletedEventHandler(object sender, GetFacultyByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFacultyByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFacultyByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Faculty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Faculty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddFacultyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditFacultyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteFacultyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591